from suitesparse.spqr.spqr_solver_base_@index@_@type@ cimport SPQRSolverBase_@index@_@type@
from suitesparse.common_types.suitesparse_types cimport *

from cysparse.sparse.csc_mat_matrices.csc_mat_@index@_@type@ cimport CSCSparseMatrix_@index@_@type@

# external definition of this type
ctypedef long SuiteSparse_long # This is exactly CySparse's INT64_t

cdef class SPQRCysparseSolver_@index@_@type@(SPQRSolverBase_@index@_@type@):
    cdef:
        # Matrix A in CSC format
        CSCSparseMatrix_@index@_@type@ csc_mat

        # no copy of internal CSC C arrays?
        bint __no_copy

        float __matrix_transform_time

{% if type in complex_list %}
        # we keep internally two arrays for the complex numbers: this is required by CHOLMOD...
        @type|cysparse_real_type_from_real_cysparse_complex_type@ * csc_rval
        @type|cysparse_real_type_from_real_cysparse_complex_type@ * csc_ival

{% endif %}